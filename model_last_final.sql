/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 07-θών-2016 16:24:51 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Friend_Friend]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Friend] DROP CONSTRAINT [FK_Friend_Friend]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Friend_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Friend] DROP CONSTRAINT [FK_Friend_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_MessageWall_Message]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [MessageWall] DROP CONSTRAINT [FK_MessageWall_Message]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_MessageWall_Profile]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [MessageWall] DROP CONSTRAINT [FK_MessageWall_Profile]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_MessageWall_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [MessageWall] DROP CONSTRAINT [FK_MessageWall_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Profile_Country]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Profile] DROP CONSTRAINT [FK_Profile_Country]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Profile]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User] DROP CONSTRAINT [FK_User_Profile]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User] DROP CONSTRAINT [FK_User_Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UserMessage_Message]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UserMessage] DROP CONSTRAINT [FK_UserMessage_Message]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UserMessage_ToUser]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UserMessage] DROP CONSTRAINT [FK_UserMessage_ToUser]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UserMessage_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UserMessage] DROP CONSTRAINT [FK_UserMessage_User]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Country]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Country]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Friend]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Friend]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Message]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Message]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[MessageWall]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [MessageWall]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Profile]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Profile]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[UserMessage]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [UserMessage]
GO

/* Create Tables */

CREATE TABLE [Country]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[Name] nvarchar(24) NOT NULL
)
GO

CREATE TABLE [Friend]
(
	[id] int NOT NULL,
	[UserId] int NOT NULL,
	[FriendId] int NOT NULL,
	[Confirmed] bit NOT NULL,
	[RequestDate] datetime2(7) NOT NULL,
	[ConfirmDate] datetime2(7) NULL
)
GO

CREATE TABLE [Message]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[MessageBody] ntext NOT NULL
)
GO

CREATE TABLE [MessageWall]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[ProfileId] int NOT NULL,
	[PostedUserId] int NOT NULL,
	[MessageId] int NOT NULL,
	[PostedDate] datetime2(7) NOT NULL
)
GO

CREATE TABLE [Profile]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[CountryId] int NOT NULL,
	[Avatar] varbinary(max) NULL,
	[BirthDate] datetime2(7) NOT NULL,
	[About] ntext NULL,
	[Activity] ntext NULL,
	[Interests] ntext NULL,
	[FavoriteMusic] ntext NULL,
	[FavoriteFilms] ntext NULL,
	[Sex] bit NOT NULL
)
GO

CREATE TABLE [Role]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[Name] nvarchar(16) NOT NULL,
	[Description] text NULL
)
GO

CREATE TABLE [User]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[RoleId] int NOT NULL,
	[Mobile] nvarchar(16) NOT NULL,
	[Password] varbinary(max) NOT NULL,
	[Email] nvarchar(24) NOT NULL,
	[Name] nvarchar(24) NOT NULL,
	[LastName] nvarchar(24) NOT NULL,
	[LastVisitDateTime] datetime2(7) NOT NULL,
	[ActivatedDate] datetime2(7) NOT NULL,
	[ProfileId] int NOT NULL
)
GO

CREATE TABLE [UserMessage]
(
	[id] int NOT NULL IDENTITY (1, 1),
	[UserId] int NOT NULL,
	[ToUserId] int NOT NULL,
	[MessageId] int NOT NULL,
	[PostedDate] datetime2(7) NOT NULL,
	[IsRead] bit NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Country] 
 ADD CONSTRAINT [PK_Country]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [Friend] 
 ADD CONSTRAINT [PK_Friend]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [Message] 
 ADD CONSTRAINT [PK_Message]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [MessageWall] 
 ADD CONSTRAINT [PK_Wall]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [Profile] 
 ADD CONSTRAINT [PK_Profile]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [Role] 
 ADD CONSTRAINT [PK_Role]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [User] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [UserMessage] 
 ADD CONSTRAINT [PK_UserMessage]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Friend] ADD CONSTRAINT [FK_Friend_Friend]
	FOREIGN KEY ([FriendId]) REFERENCES [User] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Friend] ADD CONSTRAINT [FK_Friend_User]
	FOREIGN KEY ([UserId]) REFERENCES [User] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [MessageWall] ADD CONSTRAINT [FK_MessageWall_Message]
	FOREIGN KEY ([MessageId]) REFERENCES [Message] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [MessageWall] ADD CONSTRAINT [FK_MessageWall_Profile]
	FOREIGN KEY ([ProfileId]) REFERENCES [Profile] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [MessageWall] ADD CONSTRAINT [FK_MessageWall_User]
	FOREIGN KEY ([PostedUserId]) REFERENCES [User] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Profile] ADD CONSTRAINT [FK_Profile_Country]
	FOREIGN KEY ([CountryId]) REFERENCES [Country] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User] ADD CONSTRAINT [FK_User_Profile]
	FOREIGN KEY ([ProfileId]) REFERENCES [Profile] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User] ADD CONSTRAINT [FK_User_Role]
	FOREIGN KEY ([RoleId]) REFERENCES [Role] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UserMessage] ADD CONSTRAINT [FK_UserMessage_Message]
	FOREIGN KEY ([MessageId]) REFERENCES [Message] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UserMessage] ADD CONSTRAINT [FK_UserMessage_ToUser]
	FOREIGN KEY ([ToUserId]) REFERENCES [User] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UserMessage] ADD CONSTRAINT [FK_UserMessage_User]
	FOREIGN KEY ([UserId]) REFERENCES [User] ([id]) ON DELETE No Action ON UPDATE No Action
GO
